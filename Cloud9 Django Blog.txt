1. Create a Django project
django-admin startproject myblog
cd myblog

2. Create a Django app
python3 manage.py startapp blog

3. Go to myblog/settings.py

INSTALLED_APPS = [
    # ...
    'blog',
]

#** Add below Fix in myproject/settings.py, if Allowed Hosts or CSRF error :
ALLOWED_HOSTS = ["*"]

CORS_ALLOWED_ORIGINS = ["*"]

CSRF_TRUSTED_ORIGINS=["https://*.vfs.cloud9.us-east-1.amazonaws.com"]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / "db.sqlite3",
    }
}

4. Goto blog/models.py

from django.db import models

class Post(models.Model):
    title = models.CharField(max_length=200)
    content = models.TextField()
    pub_date = models.DateTimeField(auto_now_add=True)

5. Apply migrations
python manage.py makemigrations
python manage.py migrate

6. Create Superuser (For django-admin interface)
python3 manage.py createsuperuser
It will ask for username and password
type it and remember it

7. Goto blog/views.py

from django.shortcuts import render
from .models import Post

def post_list(request):
    posts = Post.objects.all()
    return render(request, 'blog/post_list.html', {'posts': posts})

8. Create a blog/templates/blog/post_list.html file

<!-- blog/templates/blog/post_list.html -->

<!DOCTYPE html>
<html>
<head>
    <title>My Blog</title>
</head>
<body>
    <h1>My Blog</h1>
    {% for post in posts %}
        <h2>{{ post.title }}</h2>
        <p>{{ post.content }}</p>
        <p>Published on: {{ post.pub_date }}</p>
    {% endfor %}
</body>
</html>

9. Configure URLs in blog/urls.py
# blog/urls.py

from django.urls import path
from .views import post_list

urlpatterns = [
    path('', post_list, name='post_list'),
]

10. Include blog URLs in the main urls.py
# myblog/urls.py

from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('blog.urls')),
]

11. Go to blog/admin.py and register your model there

from django.contrib import admin
from .models import Post

admin.site.register(Post)

11. Run the server
cd myblog
python3 manage.py runserver 8080

12. Once the Url is opened in the browser [cloud9 aws url]/admin
Enter your username and password you have given for the superuser

In the Django admin interface, go to "Posts" under the "Blog" section.
Click on "Add Post" and create a few sample posts with titles and content.